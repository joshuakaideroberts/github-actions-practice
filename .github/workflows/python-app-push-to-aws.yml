name: CI/CD Pipeline

on:
  push:
    branches: [ "*" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

env:
  AWS_REGION: us-west-1               # <— CHANGE if needed
  CODEART_DOMAIN: jr-domain             # <— CHANGE
  CODEART_REPO: python-packages         # <— CHANGE
  CA_PACKAGE: file-encoder              # <— CHANGE (your package name)

jobs:
  test:
    runs-on: ubuntu-latest              # <— use GitHub-hosted runner
    environment: test
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # If .[dev] exists, this installs dev deps; otherwise install tools explicitly.
        pip install -e ".[dev]" || true
        pip install ruff pytest pytest-cov build twine

    - name: Lint with ruff
      run: ruff check

    - name: Test with pytest (write text + junit + coverage.xml)
      run: |
        pytest -v \
          --cov=file_encoder \
          --cov-report=xml:coverage.xml \
          --cov-report=term-missing \
          --junitxml=pytest-report.xml \
          > pytest-output.txt 2>&1 || true
        # ^ keep going so we still collect artifacts if tests fail

    - name: Build package
      run: python -m build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      if: matrix.python-version == '3.13' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload wheel to S3
      if: matrix.python-version == '3.13' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
      run: |
        for file in dist/*.whl; do
          if [ -f "$file" ]; then
            aws s3 cp "$file" "s3://${{ secrets.AWS_S3_BUCKET }}/wheels/"
          fi
        done

    - name: Upload test artifacts (coverage + junit + text log)
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.13'
      with:
        name: test-results
        path: |
          coverage.xml
          pytest-report.xml
          pytest-output.txt
        retention-days: 30
        if-no-files-found: error

    - name: Publish to CodeArtifact (twine)
      if: matrix.python-version == '3.13' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
      env:
        CODEART_DOMAIN: ${{ env.CODEART_DOMAIN }}
        CODEART_REPO: ${{ env.CODEART_REPO }}
        AWS_REGION: ${{ env.AWS_REGION }}
        CA_PACKAGE: ${{ env.CA_PACKAGE }}
      run: |
        # Get CodeArtifact credentials
        CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
          --domain "$CODEART_DOMAIN" \
          --query authorizationToken --output text \
          --region "$AWS_REGION")

        CODEARTIFACT_REPOSITORY_URL=$(aws codeartifact get-repository-endpoint \
          --domain "$CODEART_DOMAIN" \
          --repository "$CODEART_REPO" \
          --format pypi \
          --query repositoryEndpoint --output text \
          --region "$AWS_REGION")

        python -m pip install --upgrade twine

        # (Optional) delete a specific version — only if you really need to.
        # VERSION_TO_DELETE=0.1.0
        # aws codeartifact delete-package-versions \
        #   --domain "$CODEART_DOMAIN" \
        #   --repository "$CODEART_REPO" \
        #   --format pypi \
        #   --package "$CA_PACKAGE" \
        #   --versions "$VERSION_TO_DELETE" \
        #   --region "$AWS_REGION" || true

        # Upload the package
        TWINE_USERNAME=aws TWINE_PASSWORD="$CODEARTIFACT_AUTH_TOKEN" \
        twine upload --repository-url "$CODEARTIFACT_REPOSITORY_URL" dist/*.whl
